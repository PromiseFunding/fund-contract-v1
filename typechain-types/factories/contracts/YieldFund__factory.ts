/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { YieldFund, YieldFundInterface } from "../../contracts/YieldFund";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "YieldFund__FundAmountMustBeAboveZero",
    type: "error",
  },
  {
    inputs: [],
    name: "YieldFund__NotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "YieldFund__WithdrawFundsGreaterThanBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "YieldFund__WithdrawProceedsGreaterThanBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProceedsWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "approveOtherContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getFundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_assetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_poolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_totalFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFundsFromPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001537380380620015378339818101604052810190620000379190620001af565b8260808181525050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200020b565b600080fd5b6000819050919050565b62000124816200010f565b81146200013057600080fd5b50565b600081519050620001448162000119565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000177826200014a565b9050919050565b62000189816200016a565b81146200019557600080fd5b50565b600081519050620001a9816200017e565b92915050565b600080600060608486031215620001cb57620001ca6200010a565b5b6000620001db8682870162000133565b9350506020620001ee8682870162000198565b9250506040620002018682870162000198565b9150509250925092565b6080516113106200022760003960006109a601526113106000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a6b28bea11610071578063a6b28bea1461017b578063bb75f1e9146101ab578063ca03d478146101c7578063ced7428f146101e5578063d9f1aed914610203578063dba6335f1461021f576100b4565b8063275490f9146100b957806354b05c06146100d557806360d727b2146100f35780637b1837de1461012357806385d62fee1461013f578063893d20e81461015d575b600080fd5b6100d360048036038101906100ce9190610de1565b61023d565b005b6100dd6104f7565b6040516100ea9190610e4f565b60405180910390f35b61010d60048036038101906101089190610e96565b61051d565b60405161011a9190610ed2565b60405180910390f35b61013d60048036038101906101389190610eed565b610566565b005b6101476108ac565b6040516101549190610e4f565b60405180910390f35b6101656108d2565b6040516101729190610e4f565b60405180910390f35b61019560048036038101906101909190610e96565b6108fb565b6040516101a29190610ed2565b60405180910390f35b6101c560048036038101906101c09190610f6b565b610913565b005b6101cf61099e565b6040516101dc9190610ed2565b60405180910390f35b6101ed6109a4565b6040516101fa9190610ed2565b60405180910390f35b61021d60048036038101906102189190610de1565b6109c8565b005b610227610cc0565b6040516102349190610fcc565b60405180910390f35b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156103025780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040517fe1af88e50000000000000000000000000000000000000000000000000000000081526004016102f9929190610fe7565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610351919061103f565b92505081905550806004600082825461036a919061103f565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369328dec600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683336040518463ffffffff1660e01b81526004016103f293929190611073565b6020604051808303816000875af1158015610411573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043591906110bf565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc322efa58c9cb2c39cfffdac61d35c8643f5cbf13c6a7d0034de2cf18923aff3846040516104ec9190610ed2565b60405180910390a450565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008114156105a1576040517f487deefe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401610600939291906110ec565b6020604051808303816000875af115801561061f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610643919061115b565b50610692600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610913565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663617ba037600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16833060006040518563ffffffff1660e01b815260040161071694939291906111db565b600060405180830381600087803b15801561073057600080fd5b505af1158015610744573d6000803e3d6000fd5b50505050806004546107569190611220565b60048190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107a79190611220565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17a760e00745bb3dd2a80fdce494e6d046d397799ef94def8cc71e2665c6c5fd846040516108a09190610ed2565b60405180910390a45050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090505481565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b382670de0b6b3a76400006040518363ffffffff1660e01b81526004016109569291906112b1565b6020604051808303816000875af1158015610975573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610999919061115b565b505050565b60045481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a4d576040517f49e73f7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610aaa9190610e4f565b602060405180830381865afa158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb91906110bf565b9050600060045482610afd919061103f565b905080831115610b4f57610b1042610ce4565b82816040517f8525200f000000000000000000000000000000000000000000000000000000008152600401610b46929190610fe7565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369328dec600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685336040518463ffffffff1660e01b8152600401610bd093929190611073565b6020604051808303816000875af1158015610bef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1391906110bf565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3eab9245288923bdc2f009594c02746febfdd320faf123e203eeb67223aa122285604051610cb39190610ed2565b60405180910390a3505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d7a81604051602401610cf89190610ed2565b6040516020818303038152906040527ff82c50f1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d7d565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b6000819050919050565b610dbe81610dab565b8114610dc957600080fd5b50565b600081359050610ddb81610db5565b92915050565b600060208284031215610df757610df6610da6565b5b6000610e0584828501610dcc565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e3982610e0e565b9050919050565b610e4981610e2e565b82525050565b6000602082019050610e646000830184610e40565b92915050565b610e7381610e2e565b8114610e7e57600080fd5b50565b600081359050610e9081610e6a565b92915050565b600060208284031215610eac57610eab610da6565b5b6000610eba84828501610e81565b91505092915050565b610ecc81610dab565b82525050565b6000602082019050610ee76000830184610ec3565b92915050565b60008060408385031215610f0457610f03610da6565b5b6000610f1285828601610e81565b9250506020610f2385828601610dcc565b9150509250929050565b6000610f3882610e2e565b9050919050565b610f4881610f2d565b8114610f5357600080fd5b50565b600081359050610f6581610f3f565b92915050565b60008060408385031215610f8257610f81610da6565b5b6000610f9085828601610f56565b9250506020610fa185828601610e81565b9150509250929050565b6000610fb682610e0e565b9050919050565b610fc681610fab565b82525050565b6000602082019050610fe16000830184610fbd565b92915050565b6000604082019050610ffc6000830185610ec3565b6110096020830184610ec3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061104a82610dab565b915061105583610dab565b92508282101561106857611067611010565b5b828203905092915050565b60006060820190506110886000830186610e40565b6110956020830185610ec3565b6110a26040830184610e40565b949350505050565b6000815190506110b981610db5565b92915050565b6000602082840312156110d5576110d4610da6565b5b60006110e3848285016110aa565b91505092915050565b60006060820190506111016000830186610e40565b61110e6020830185610e40565b61111b6040830184610ec3565b949350505050565b60008115159050919050565b61113881611123565b811461114357600080fd5b50565b6000815190506111558161112f565b92915050565b60006020828403121561117157611170610da6565b5b600061117f84828501611146565b91505092915050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b60006111c56111c06111bb84611188565b6111a0565b611192565b9050919050565b6111d5816111aa565b82525050565b60006080820190506111f06000830187610e40565b6111fd6020830186610ec3565b61120a6040830185610e40565b61121760608301846111cc565b95945050505050565b600061122b82610dab565b915061123683610dab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561126b5761126a611010565b5b828201905092915050565b6000819050919050565b600061129b61129661129184611276565b6111a0565b610dab565b9050919050565b6112ab81611280565b82525050565b60006040820190506112c66000830185610e40565b6112d360208301846112a2565b939250505056fea2646970667358221220eb8da0016e7f9236351a7a9e41fcbfc02023443265e3df4c1d642c04abedc4de64736f6c634300080a0033";

type YieldFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldFund__factory extends ContractFactory {
  constructor(...args: YieldFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    lockTime: PromiseOrValue<BigNumberish>,
    assetAddress: PromiseOrValue<string>,
    poolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldFund> {
    return super.deploy(
      lockTime,
      assetAddress,
      poolAddress,
      overrides || {}
    ) as Promise<YieldFund>;
  }
  override getDeployTransaction(
    lockTime: PromiseOrValue<BigNumberish>,
    assetAddress: PromiseOrValue<string>,
    poolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      lockTime,
      assetAddress,
      poolAddress,
      overrides || {}
    );
  }
  override attach(address: string): YieldFund {
    return super.attach(address) as YieldFund;
  }
  override connect(signer: Signer): YieldFund__factory {
    return super.connect(signer) as YieldFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldFundInterface {
    return new utils.Interface(_abi) as YieldFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldFund {
    return new Contract(address, _abi, signerOrProvider) as YieldFund;
  }
}
