/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { YieldFund, YieldFundInterface } from "../../contracts/YieldFund";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "YieldFund__FundAmountMustBeAboveZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeLeft",
        type: "uint256",
      },
    ],
    name: "YieldFund__FundsStillTimeLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "YieldFund__NotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "YieldFund__WithdrawFundsGreaterThanBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "YieldFund__WithdrawProceedsGreaterThanBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProceedsWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getFundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getTimeLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimeLock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_assetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_poolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_totalFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFundsFromPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200180d3803806200180d8339818101604052810190620000379190620001af565b8260808181525050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200020b565b600080fd5b6000819050919050565b62000124816200010f565b81146200013057600080fd5b50565b600081519050620001448162000119565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000177826200014a565b9050919050565b62000189816200016a565b81146200019557600080fd5b50565b600081519050620001a9816200017e565b92915050565b600080600060608486031215620001cb57620001ca6200010a565b5b6000620001db8682870162000133565b9350506020620001ee8682870162000198565b9250506040620002018682870162000198565b9150509250925092565b6080516115ca62000243600039600081816103660152818161039a0152818161048b015281816105910152610d6901526115ca6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063ced7428f11610066578063ced7428f1461029e578063d9f1aed9146102bc578063dba6335f146102d8578063f586c6d9146102f657610100565b8063893d20e814610215578063a6b28bea14610233578063ca03d47814610264578063ca1d209d1461028257610100565b806360d727b2116100d357806360d727b21461018d578063670ab5e9146101bd57806382580805146101db57806385d62fee146101f757610100565b8063111eb8b114610105578063119a5e9614610135578063275490f91461015357806354b05c061461016f575b600080fd5b61011f600480360381019061011a919061112b565b610314565b60405161012c9190611171565b60405180910390f35b61013d610396565b60405161014a9190611171565b60405180910390f35b61016d600480360381019061016891906111b8565b6103be565b005b6101776107ef565b60405161018491906111f4565b60405180910390f35b6101a760048036038101906101a2919061112b565b610815565b6040516101b49190611171565b60405180910390f35b6101c5610861565b6040516101d291906111f4565b60405180910390f35b6101f560048036038101906101f0919061124d565b61088b565b005b6101ff61090f565b60405161020c91906111f4565b60405180910390f35b61021d610935565b60405161022a91906111f4565b60405180910390f35b61024d6004803603810190610248919061112b565b61095e565b60405161025b9291906112a0565b60405180910390f35b61026c610982565b6040516102799190611171565b60405180910390f35b61029c600480360381019061029791906111b8565b610988565b005b6102a6610d67565b6040516102b39190611171565b60405180910390f35b6102d660048036038101906102d191906111b8565b610d8b565b005b6102e061107a565b6040516102ed91906112ea565b60405180910390f35b6102fe61109e565b60405161030b91906111f4565b60405180910390f35b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426103649190611334565b7f000000000000000000000000000000000000000000000000000000000000000061038f9190611334565b9050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548111156104895780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546040517fe1af88e50000000000000000000000000000000000000000000000000000000081526004016104809291906112a0565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426104f89190611334565b10156105f757600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261058f9190611334565b7f00000000000000000000000000000000000000000000000000000000000000006105ba9190611334565b6040517fef49fec60000000000000000000000000000000000000000000000000000000081526004016105ee9291906112a0565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546106499190611334565b9250508190555080600460008282546106629190611334565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369328dec600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683336040518463ffffffff1660e01b81526004016106ea93929190611368565b6020604051808303816000875af1158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d91906113b4565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc322efa58c9cb2c39cfffdac61d35c8643f5cbf13c6a7d0034de2cf18923aff3846040516107e49190611171565b60405180910390a450565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b81526004016108c69291906113e1565b6020604051808303816000875af11580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109099190611442565b50505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090508060000154908060010154905082565b60045481565b60008114156109c3576040517f487deefe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a229392919061146f565b6020604051808303816000875af1158015610a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a659190611442565b50610ab5600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361088b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663617ba037600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16833060006040518563ffffffff1660e01b8152600401610b3994939291906114f9565b600060405180830381600087803b158015610b5357600080fd5b505af1158015610b67573d6000803e3d6000fd5b505050506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610bfe5742600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b80600454610c0c919061153e565b60048190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610c60919061153e565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17a760e00745bb3dd2a80fdce494e6d046d397799ef94def8cc71e2665c6c5fd84604051610d5c9190611171565b60405180910390a450565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e10576040517f49e73f7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e6d91906111f4565b602060405180830381865afa158015610e8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eae91906113b4565b9050600060045482610ec09190611334565b905080831115610f095782816040517f8525200f000000000000000000000000000000000000000000000000000000008152600401610f009291906112a0565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369328dec600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685336040518463ffffffff1660e01b8152600401610f8a93929190611368565b6020604051808303816000875af1158015610fa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcd91906113b4565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3eab9245288923bdc2f009594c02746febfdd320faf123e203eeb67223aa12228560405161106d9190611171565b60405180910390a3505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110f8826110cd565b9050919050565b611108816110ed565b811461111357600080fd5b50565b600081359050611125816110ff565b92915050565b600060208284031215611141576111406110c8565b5b600061114f84828501611116565b91505092915050565b6000819050919050565b61116b81611158565b82525050565b60006020820190506111866000830184611162565b92915050565b61119581611158565b81146111a057600080fd5b50565b6000813590506111b28161118c565b92915050565b6000602082840312156111ce576111cd6110c8565b5b60006111dc848285016111a3565b91505092915050565b6111ee816110ed565b82525050565b600060208201905061120960008301846111e5565b92915050565b600061121a826110ed565b9050919050565b61122a8161120f565b811461123557600080fd5b50565b60008135905061124781611221565b92915050565b600080600060608486031215611266576112656110c8565b5b600061127486828701611238565b935050602061128586828701611116565b9250506040611296868287016111a3565b9150509250925092565b60006040820190506112b56000830185611162565b6112c26020830184611162565b9392505050565b60006112d4826110cd565b9050919050565b6112e4816112c9565b82525050565b60006020820190506112ff60008301846112db565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061133f82611158565b915061134a83611158565b92508282101561135d5761135c611305565b5b828203905092915050565b600060608201905061137d60008301866111e5565b61138a6020830185611162565b61139760408301846111e5565b949350505050565b6000815190506113ae8161118c565b92915050565b6000602082840312156113ca576113c96110c8565b5b60006113d88482850161139f565b91505092915050565b60006040820190506113f660008301856111e5565b6114036020830184611162565b9392505050565b60008115159050919050565b61141f8161140a565b811461142a57600080fd5b50565b60008151905061143c81611416565b92915050565b600060208284031215611458576114576110c8565b5b60006114668482850161142d565b91505092915050565b600060608201905061148460008301866111e5565b61149160208301856111e5565b61149e6040830184611162565b949350505050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b60006114e36114de6114d9846114a6565b6114be565b6114b0565b9050919050565b6114f3816114c8565b82525050565b600060808201905061150e60008301876111e5565b61151b6020830186611162565b61152860408301856111e5565b61153560608301846114ea565b95945050505050565b600061154982611158565b915061155483611158565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561158957611588611305565b5b82820190509291505056fea26469706673582212207d952abc8fde2a0ae27ccba3c8bce7a2b26a617cb78f448dff3898ec13e036bf64736f6c634300080a0033";

type YieldFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldFund__factory extends ContractFactory {
  constructor(...args: YieldFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    lockTime: PromiseOrValue<BigNumberish>,
    assetAddress: PromiseOrValue<string>,
    poolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldFund> {
    return super.deploy(
      lockTime,
      assetAddress,
      poolAddress,
      overrides || {}
    ) as Promise<YieldFund>;
  }
  override getDeployTransaction(
    lockTime: PromiseOrValue<BigNumberish>,
    assetAddress: PromiseOrValue<string>,
    poolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      lockTime,
      assetAddress,
      poolAddress,
      overrides || {}
    );
  }
  override attach(address: string): YieldFund {
    return super.attach(address) as YieldFund;
  }
  override connect(signer: Signer): YieldFund__factory {
    return super.connect(signer) as YieldFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldFundInterface {
    return new utils.Interface(_abi) as YieldFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldFund {
    return new Contract(address, _abi, signerOrProvider) as YieldFund;
  }
}
