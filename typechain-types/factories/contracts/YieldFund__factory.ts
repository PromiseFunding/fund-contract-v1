/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { YieldFund, YieldFundInterface } from "../../contracts/YieldFund";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getFundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_assetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_poolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516108323803806108328339818101604052810190610032919061019d565b8260808181525050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101f0565b600080fd5b6000819050919050565b61011c81610109565b811461012757600080fd5b50565b60008151905061013981610113565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061016a8261013f565b9050919050565b61017a8161015f565b811461018557600080fd5b50565b60008151905061019781610171565b92915050565b6000806000606084860312156101b6576101b5610104565b5b60006101c48682870161012a565b93505060206101d586828701610188565b92505060406101e686828701610188565b9150509250925092565b60805161062761020b600039600061037901526106276000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806385d62fee1161006657806385d62fee1461010c578063893d20e81461012a578063a6b28bea14610148578063ced7428f14610178578063dba6335f1461019657610093565b806324600fc31461009857806354b05c06146100a257806360d727b2146100c05780637b1837de146100f0575b600080fd5b6100a06101b4565b005b6100aa6101b6565b6040516100b79190610400565b60405180910390f35b6100da60048036038101906100d5919061044c565b6101dc565b6040516100e79190610492565b60405180910390f35b61010a600480360381019061010591906104d9565b610225565b005b610114610310565b6040516101219190610400565b60405180910390f35b610132610336565b60405161013f9190610400565b60405180910390f35b610162600480360381019061015d919061044c565b61035f565b60405161016f9190610492565b60405180910390f35b610180610377565b60405161018d9190610492565b60405180910390f35b61019e61039b565b6040516101ab919061053a565b60405180910390f35b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b815260040161028493929190610555565b6020604051808303816000875af11580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c791906105c4565b5080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ea826103bf565b9050919050565b6103fa816103df565b82525050565b600060208201905061041560008301846103f1565b92915050565b600080fd5b610429816103df565b811461043457600080fd5b50565b60008135905061044681610420565b92915050565b6000602082840312156104625761046161041b565b5b600061047084828501610437565b91505092915050565b6000819050919050565b61048c81610479565b82525050565b60006020820190506104a76000830184610483565b92915050565b6104b681610479565b81146104c157600080fd5b50565b6000813590506104d3816104ad565b92915050565b600080604083850312156104f0576104ef61041b565b5b60006104fe85828601610437565b925050602061050f858286016104c4565b9150509250929050565b6000610524826103bf565b9050919050565b61053481610519565b82525050565b600060208201905061054f600083018461052b565b92915050565b600060608201905061056a60008301866103f1565b61057760208301856103f1565b6105846040830184610483565b949350505050565b60008115159050919050565b6105a18161058c565b81146105ac57600080fd5b50565b6000815190506105be81610598565b92915050565b6000602082840312156105da576105d961041b565b5b60006105e8848285016105af565b9150509291505056fea2646970667358221220442033b3463fa838a9cd19d3650dd23484ce565d6cedef779cb25400e416f50764736f6c634300080a0033";

type YieldFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldFund__factory extends ContractFactory {
  constructor(...args: YieldFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    lockTime: PromiseOrValue<BigNumberish>,
    assetAddress: PromiseOrValue<string>,
    poolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldFund> {
    return super.deploy(
      lockTime,
      assetAddress,
      poolAddress,
      overrides || {}
    ) as Promise<YieldFund>;
  }
  override getDeployTransaction(
    lockTime: PromiseOrValue<BigNumberish>,
    assetAddress: PromiseOrValue<string>,
    poolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      lockTime,
      assetAddress,
      poolAddress,
      overrides || {}
    );
  }
  override attach(address: string): YieldFund {
    return super.attach(address) as YieldFund;
  }
  override connect(signer: Signer): YieldFund__factory {
    return super.connect(signer) as YieldFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldFundInterface {
    return new utils.Interface(_abi) as YieldFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldFund {
    return new Contract(address, _abi, signerOrProvider) as YieldFund;
  }
}
