/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { YieldFund, YieldFundInterface } from "../../contracts/YieldFund";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "approveOtherContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getFundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_assetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_poolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000c4d38038062000c4d8339818101604052810190620000379190620001af565b8260808181525050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200020b565b600080fd5b6000819050919050565b62000124816200010f565b81146200013057600080fd5b50565b600081519050620001448162000119565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000177826200014a565b9050919050565b62000189816200016a565b81146200019557600080fd5b50565b600081519050620001a9816200017e565b92915050565b600080600060608486031215620001cb57620001ca6200010a565b5b6000620001db8682870162000133565b9350506020620001ee8682870162000198565b9250506040620002018682870162000198565b9150509250925092565b608051610a266200022760003960006105790152610a266000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063893d20e811610066578063893d20e814610135578063a6b28bea14610153578063bb75f1e914610183578063ced7428f1461019f578063dba6335f146101bd5761009e565b806324600fc3146100a357806354b05c06146100ad57806360d727b2146100cb5780637b1837de146100fb57806385d62fee14610117575b600080fd5b6100ab6101db565b005b6100b56101dd565b6040516100c29190610600565b60405180910390f35b6100e560048036038101906100e0919061064c565b610203565b6040516100f29190610692565b60405180910390f35b610115600480360381019061011091906106d9565b61024c565b005b61011f610485565b60405161012c9190610600565b60405180910390f35b61013d6104ab565b60405161014a9190610600565b60405180910390f35b61016d6004803603810190610168919061064c565b6104d4565b60405161017a9190610692565b60405180910390f35b61019d60048036038101906101989190610757565b6104ec565b005b6101a7610577565b6040516101b49190610692565b60405180910390f35b6101c561059b565b6040516101d291906107b8565b60405180910390f35b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b81526004016102ab939291906107d3565b6020604051808303816000875af11580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee9190610842565b5061033d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166104ec565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663617ba037600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16833060006040518563ffffffff1660e01b81526004016103c194939291906108c2565b600060405180830381600087803b1580156103db57600080fd5b505af11580156103ef573d6000803e3d6000fd5b5050505080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461043e9190610936565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090505481565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b382670de0b6b3a76400006040518363ffffffff1660e01b815260040161052f9291906109c7565b6020604051808303816000875af115801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190610842565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ea826105bf565b9050919050565b6105fa816105df565b82525050565b600060208201905061061560008301846105f1565b92915050565b600080fd5b610629816105df565b811461063457600080fd5b50565b60008135905061064681610620565b92915050565b6000602082840312156106625761066161061b565b5b600061067084828501610637565b91505092915050565b6000819050919050565b61068c81610679565b82525050565b60006020820190506106a76000830184610683565b92915050565b6106b681610679565b81146106c157600080fd5b50565b6000813590506106d3816106ad565b92915050565b600080604083850312156106f0576106ef61061b565b5b60006106fe85828601610637565b925050602061070f858286016106c4565b9150509250929050565b6000610724826105df565b9050919050565b61073481610719565b811461073f57600080fd5b50565b6000813590506107518161072b565b92915050565b6000806040838503121561076e5761076d61061b565b5b600061077c85828601610742565b925050602061078d85828601610637565b9150509250929050565b60006107a2826105bf565b9050919050565b6107b281610797565b82525050565b60006020820190506107cd60008301846107a9565b92915050565b60006060820190506107e860008301866105f1565b6107f560208301856105f1565b6108026040830184610683565b949350505050565b60008115159050919050565b61081f8161080a565b811461082a57600080fd5b50565b60008151905061083c81610816565b92915050565b6000602082840312156108585761085761061b565b5b60006108668482850161082d565b91505092915050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b60006108ac6108a76108a28461086f565b610887565b610879565b9050919050565b6108bc81610891565b82525050565b60006080820190506108d760008301876105f1565b6108e46020830186610683565b6108f160408301856105f1565b6108fe60608301846108b3565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061094182610679565b915061094c83610679565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561098157610980610907565b5b828201905092915050565b6000819050919050565b60006109b16109ac6109a78461098c565b610887565b610679565b9050919050565b6109c181610996565b82525050565b60006040820190506109dc60008301856105f1565b6109e960208301846109b8565b939250505056fea2646970667358221220b46fab7d8af0982c62d1070998a88fc2f844dd857f976cdbc77945d6520735b164736f6c634300080a0033";

type YieldFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldFund__factory extends ContractFactory {
  constructor(...args: YieldFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    lockTime: PromiseOrValue<BigNumberish>,
    assetAddress: PromiseOrValue<string>,
    poolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldFund> {
    return super.deploy(
      lockTime,
      assetAddress,
      poolAddress,
      overrides || {}
    ) as Promise<YieldFund>;
  }
  override getDeployTransaction(
    lockTime: PromiseOrValue<BigNumberish>,
    assetAddress: PromiseOrValue<string>,
    poolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      lockTime,
      assetAddress,
      poolAddress,
      overrides || {}
    );
  }
  override attach(address: string): YieldFund {
    return super.attach(address) as YieldFund;
  }
  override connect(signer: Signer): YieldFund__factory {
    return super.connect(signer) as YieldFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldFundInterface {
    return new utils.Interface(_abi) as YieldFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldFund {
    return new Contract(address, _abi, signerOrProvider) as YieldFund;
  }
}
