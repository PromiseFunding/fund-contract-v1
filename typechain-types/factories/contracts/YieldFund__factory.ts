/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { YieldFund, YieldFundInterface } from "../../contracts/YieldFund";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "YieldFund__FundAmountMustBeAboveZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeLeft",
        type: "uint256",
      },
    ],
    name: "YieldFund__FundsStillTimeLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "YieldFund__NotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "YieldFund__WithdrawFundsGreaterThanBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "YieldFund__WithdrawProceedsGreaterThanBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProceedsWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "approveOtherContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getFundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getTimeLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimeLock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_assetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_poolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_totalFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFundsFromPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200183b3803806200183b8339818101604052810190620000379190620001af565b8260808181525050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200020b565b600080fd5b6000819050919050565b62000124816200010f565b81146200013057600080fd5b50565b600081519050620001448162000119565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000177826200014a565b9050919050565b62000189816200016a565b81146200019557600080fd5b50565b600081519050620001a9816200017e565b92915050565b600080600060608486031215620001cb57620001ca6200010a565b5b6000620001db8682870162000133565b9350506020620001ee8682870162000198565b9250506040620002018682870162000198565b9150509250925092565b6080516115f862000243600039600081816103660152818161039a0152818161048b015281816105910152610d6f01526115f86000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a6b28bea11610097578063ced7428f11610066578063ced7428f1461029e578063d9f1aed9146102bc578063dba6335f146102d8578063f586c6d9146102f657610100565b8063a6b28bea14610217578063bb75f1e914610248578063ca03d47814610264578063ca1d209d1461028257610100565b806360d727b2116100d357806360d727b21461018d578063670ab5e9146101bd57806385d62fee146101db578063893d20e8146101f957610100565b8063111eb8b114610105578063119a5e9614610135578063275490f91461015357806354b05c061461016f575b600080fd5b61011f600480360381019061011a9190611131565b610314565b60405161012c9190611177565b60405180910390f35b61013d610396565b60405161014a9190611177565b60405180910390f35b61016d600480360381019061016891906111be565b6103be565b005b6101776107ef565b60405161018491906111fa565b60405180910390f35b6101a760048036038101906101a29190611131565b610815565b6040516101b49190611177565b60405180910390f35b6101c5610861565b6040516101d291906111fa565b60405180910390f35b6101e361088b565b6040516101f091906111fa565b60405180910390f35b6102016108b1565b60405161020e91906111fa565b60405180910390f35b610231600480360381019061022c9190611131565b6108da565b60405161023f929190611215565b60405180910390f35b610262600480360381019061025d919061127c565b6108fe565b005b61026c610989565b6040516102799190611177565b60405180910390f35b61029c600480360381019061029791906111be565b61098f565b005b6102a6610d6d565b6040516102b39190611177565b60405180910390f35b6102d660048036038101906102d191906111be565b610d91565b005b6102e0611080565b6040516102ed91906112dd565b60405180910390f35b6102fe6110a4565b60405161030b91906111fa565b60405180910390f35b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426103649190611327565b7f000000000000000000000000000000000000000000000000000000000000000061038f9190611327565b9050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548111156104895780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546040517fe1af88e5000000000000000000000000000000000000000000000000000000008152600401610480929190611215565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426104f89190611327565b10156105f757600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261058f9190611327565b7f00000000000000000000000000000000000000000000000000000000000000006105ba9190611327565b6040517fef49fec60000000000000000000000000000000000000000000000000000000081526004016105ee929190611215565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546106499190611327565b9250508190555080600460008282546106629190611327565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369328dec600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683336040518463ffffffff1660e01b81526004016106ea9392919061135b565b6020604051808303816000875af1158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d91906113a7565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc322efa58c9cb2c39cfffdac61d35c8643f5cbf13c6a7d0034de2cf18923aff3846040516107e49190611177565b60405180910390a450565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090508060000154908060010154905082565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b382670de0b6b3a76400006040518363ffffffff1660e01b8152600401610941929190611419565b6020604051808303816000875af1158015610960573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610984919061147a565b505050565b60045481565b60008114156109ca576040517f487deefe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a29939291906114a7565b6020604051808303816000875af1158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c919061147a565b50610abb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166108fe565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663617ba037600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16833060006040518563ffffffff1660e01b8152600401610b3f9493929190611527565b600060405180830381600087803b158015610b5957600080fd5b505af1158015610b6d573d6000803e3d6000fd5b505050506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610c045742600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b80600454610c12919061156c565b60048190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610c66919061156c565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17a760e00745bb3dd2a80fdce494e6d046d397799ef94def8cc71e2665c6c5fd84604051610d629190611177565b60405180910390a450565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e16576040517f49e73f7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e7391906111fa565b602060405180830381865afa158015610e90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb491906113a7565b9050600060045482610ec69190611327565b905080831115610f0f5782816040517f8525200f000000000000000000000000000000000000000000000000000000008152600401610f06929190611215565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369328dec600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685336040518463ffffffff1660e01b8152600401610f909392919061135b565b6020604051808303816000875af1158015610faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd391906113a7565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3eab9245288923bdc2f009594c02746febfdd320faf123e203eeb67223aa1222856040516110739190611177565b60405180910390a3505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110fe826110d3565b9050919050565b61110e816110f3565b811461111957600080fd5b50565b60008135905061112b81611105565b92915050565b600060208284031215611147576111466110ce565b5b60006111558482850161111c565b91505092915050565b6000819050919050565b6111718161115e565b82525050565b600060208201905061118c6000830184611168565b92915050565b61119b8161115e565b81146111a657600080fd5b50565b6000813590506111b881611192565b92915050565b6000602082840312156111d4576111d36110ce565b5b60006111e2848285016111a9565b91505092915050565b6111f4816110f3565b82525050565b600060208201905061120f60008301846111eb565b92915050565b600060408201905061122a6000830185611168565b6112376020830184611168565b9392505050565b6000611249826110f3565b9050919050565b6112598161123e565b811461126457600080fd5b50565b60008135905061127681611250565b92915050565b60008060408385031215611293576112926110ce565b5b60006112a185828601611267565b92505060206112b28582860161111c565b9150509250929050565b60006112c7826110d3565b9050919050565b6112d7816112bc565b82525050565b60006020820190506112f260008301846112ce565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113328261115e565b915061133d8361115e565b9250828210156113505761134f6112f8565b5b828203905092915050565b600060608201905061137060008301866111eb565b61137d6020830185611168565b61138a60408301846111eb565b949350505050565b6000815190506113a181611192565b92915050565b6000602082840312156113bd576113bc6110ce565b5b60006113cb84828501611392565b91505092915050565b6000819050919050565b6000819050919050565b60006114036113fe6113f9846113d4565b6113de565b61115e565b9050919050565b611413816113e8565b82525050565b600060408201905061142e60008301856111eb565b61143b602083018461140a565b9392505050565b60008115159050919050565b61145781611442565b811461146257600080fd5b50565b6000815190506114748161144e565b92915050565b6000602082840312156114905761148f6110ce565b5b600061149e84828501611465565b91505092915050565b60006060820190506114bc60008301866111eb565b6114c960208301856111eb565b6114d66040830184611168565b949350505050565b6000819050919050565b600061ffff82169050919050565b600061151161150c611507846114de565b6113de565b6114e8565b9050919050565b611521816114f6565b82525050565b600060808201905061153c60008301876111eb565b6115496020830186611168565b61155660408301856111eb565b6115636060830184611518565b95945050505050565b60006115778261115e565b91506115828361115e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115b7576115b66112f8565b5b82820190509291505056fea2646970667358221220b0e393de3149dc5388fd784d3867253b2cba71af10c9c0ae3a24c86a3563760f64736f6c634300080a0033";

type YieldFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldFund__factory extends ContractFactory {
  constructor(...args: YieldFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    lockTime: PromiseOrValue<BigNumberish>,
    assetAddress: PromiseOrValue<string>,
    poolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldFund> {
    return super.deploy(
      lockTime,
      assetAddress,
      poolAddress,
      overrides || {}
    ) as Promise<YieldFund>;
  }
  override getDeployTransaction(
    lockTime: PromiseOrValue<BigNumberish>,
    assetAddress: PromiseOrValue<string>,
    poolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      lockTime,
      assetAddress,
      poolAddress,
      overrides || {}
    );
  }
  override attach(address: string): YieldFund {
    return super.attach(address) as YieldFund;
  }
  override connect(signer: Signer): YieldFund__factory {
    return super.connect(signer) as YieldFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldFundInterface {
    return new utils.Interface(_abi) as YieldFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldFund {
    return new Contract(address, _abi, signerOrProvider) as YieldFund;
  }
}
