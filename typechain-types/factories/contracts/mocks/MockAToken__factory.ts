/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockAToken,
  MockATokenInterface,
} from "../../../contracts/mocks/MockAToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200237e3803806200237e8339818101604052810190620000379190620006b0565b6040518060400160405280601281526020017f4161766520457468657265756d205553445400000000000000000000000000008152506040518060400160405280600881526020017f61457468555344540000000000000000000000000000000000000000000000008152508160039080519060200190620000bb92919062000596565b508060049080519060200190620000d492919062000596565b505050620000f7620000eb620001f360201b60201c565b620001fb60201b60201c565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200016b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620002c160201b60201c565b6200018a816c01431e0fae6d7217caa00000006200035860201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff16636ce164f86040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620001d357600080fd5b505af1158015620001e8573d6000803e3d6000fd5b505050505062000998565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620002d1620004d160201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000344576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200033b9062000769565b60405180910390fd5b6200035581620001fb60201b60201c565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620003cb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003c290620007db565b60405180910390fd5b620003df600083836200056260201b60201c565b8060026000828254620003f3919062000836565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200044a919062000836565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620004b19190620008a4565b60405180910390a3620004cd600083836200056760201b60201c565b5050565b620004e1620001f360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620005076200056c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000560576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005579062000911565b60405180910390fd5b565b505050565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b828054620005a49062000962565b90600052602060002090601f016020900481019282620005c8576000855562000614565b82601f10620005e357805160ff191683800117855562000614565b8280016001018555821562000614579182015b8281111562000613578251825591602001919060010190620005f6565b5b50905062000623919062000627565b5090565b5b808211156200064257600081600090555060010162000628565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000678826200064b565b9050919050565b6200068a816200066b565b81146200069657600080fd5b50565b600081519050620006aa816200067f565b92915050565b600060208284031215620006c957620006c862000646565b5b6000620006d98482850162000699565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600062000751602683620006e2565b91506200075e82620006f3565b604082019050919050565b60006020820190508181036000830152620007848162000742565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620007c3601f83620006e2565b9150620007d0826200078b565b602082019050919050565b60006020820190508181036000830152620007f681620007b4565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200084382620007fd565b91506200085083620007fd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000888576200088762000807565b5b828201905092915050565b6200089e81620007fd565b82525050565b6000602082019050620008bb600083018462000893565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620008f9602083620006e2565b91506200090682620008c1565b602082019050919050565b600060208201905081810360008301526200092c81620008ea565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200097b57607f821691505b6020821081141562000992576200099162000933565b5b50919050565b6119d680620009a86000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a9059cbb11610066578063a9059cbb146102b1578063dba6335f146102e1578063dd62ed3e146102ff578063f2fde38b1461032f57610100565b8063715018a61461023b5780638da5cb5b1461024557806395d89b4114610263578063a457c2d71461028157610100565b806323b872dd116100d357806323b872dd1461018d578063313ce567146101bd57806339509351146101db57806370a082311461020b57610100565b806306fdde0314610105578063095ea7b3146101235780630d1118ce1461015357806318160ddd1461016f575b600080fd5b61010d61034b565b60405161011a9190611010565b60405180910390f35b61013d600480360381019061013891906110cb565b6103dd565b60405161014a9190611126565b60405180910390f35b61016d600480360381019061016891906110cb565b610400565b005b610177610416565b6040516101849190611150565b60405180910390f35b6101a760048036038101906101a2919061116b565b610420565b6040516101b49190611126565b60405180910390f35b6101c561044f565b6040516101d291906111da565b60405180910390f35b6101f560048036038101906101f091906110cb565b610458565b6040516102029190611126565b60405180910390f35b610225600480360381019061022091906111f5565b61048f565b6040516102329190611150565b60405180910390f35b6102436104d7565b005b61024d6104eb565b60405161025a9190611231565b60405180910390f35b61026b610515565b6040516102789190611010565b60405180910390f35b61029b600480360381019061029691906110cb565b6105a7565b6040516102a89190611126565b60405180910390f35b6102cb60048036038101906102c691906110cb565b61061e565b6040516102d89190611126565b60405180910390f35b6102e9610641565b6040516102f69190611231565b60405180910390f35b6103196004803603810190610314919061124c565b610667565b6040516103269190611150565b60405180910390f35b610349600480360381019061034491906111f5565b6106ee565b005b60606003805461035a906112bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610386906112bb565b80156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b5050505050905090565b6000806103e8610772565b90506103f581858561077a565b600191505092915050565b610408610945565b61041282826109c3565b5050565b6000600254905090565b60008061042b610772565b9050610438858285610b9a565b610443858585610c26565b60019150509392505050565b60006012905090565b600080610463610772565b90506104848185856104758589610667565b61047f919061131c565b61077a565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104df610945565b6104e96000610ea7565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610524906112bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610550906112bb565b801561059d5780601f106105725761010080835404028352916020019161059d565b820191906000526020600020905b81548152906001019060200180831161058057829003601f168201915b5050505050905090565b6000806105b2610772565b905060006105c08286610667565b905083811015610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc906113e4565b60405180910390fd5b610612828686840361077a565b60019250505092915050565b600080610629610772565b9050610636818585610c26565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106f6610945565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075d90611476565b60405180910390fd5b61076f81610ea7565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611508565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561085a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108519061159a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109389190611150565b60405180910390a3505050565b61094d610772565b73ffffffffffffffffffffffffffffffffffffffff1661096b6104eb565b73ffffffffffffffffffffffffffffffffffffffff16146109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b890611606565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a90611698565b60405180910390fd5b610a3f82600083610f6d565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abc9061172a565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610b1c919061174a565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b819190611150565b60405180910390a3610b9583600084610f72565b505050565b6000610ba68484610667565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c205781811015610c12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c09906117ca565b60405180910390fd5b610c1f848484840361077a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8d9061185c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfd906118ee565b60405180910390fd5b610d11838383610f6d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8e90611980565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e2a919061131c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e8e9190611150565b60405180910390a3610ea1848484610f72565b50505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fb1578082015181840152602081019050610f96565b83811115610fc0576000848401525b50505050565b6000601f19601f8301169050919050565b6000610fe282610f77565b610fec8185610f82565b9350610ffc818560208601610f93565b61100581610fc6565b840191505092915050565b6000602082019050818103600083015261102a8184610fd7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061106282611037565b9050919050565b61107281611057565b811461107d57600080fd5b50565b60008135905061108f81611069565b92915050565b6000819050919050565b6110a881611095565b81146110b357600080fd5b50565b6000813590506110c58161109f565b92915050565b600080604083850312156110e2576110e1611032565b5b60006110f085828601611080565b9250506020611101858286016110b6565b9150509250929050565b60008115159050919050565b6111208161110b565b82525050565b600060208201905061113b6000830184611117565b92915050565b61114a81611095565b82525050565b60006020820190506111656000830184611141565b92915050565b60008060006060848603121561118457611183611032565b5b600061119286828701611080565b93505060206111a386828701611080565b92505060406111b4868287016110b6565b9150509250925092565b600060ff82169050919050565b6111d4816111be565b82525050565b60006020820190506111ef60008301846111cb565b92915050565b60006020828403121561120b5761120a611032565b5b600061121984828501611080565b91505092915050565b61122b81611057565b82525050565b60006020820190506112466000830184611222565b92915050565b6000806040838503121561126357611262611032565b5b600061127185828601611080565b925050602061128285828601611080565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112d357607f821691505b602082108114156112e7576112e661128c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132782611095565b915061133283611095565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611367576113666112ed565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006113ce602583610f82565b91506113d982611372565b604082019050919050565b600060208201905081810360008301526113fd816113c1565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611460602683610f82565b915061146b82611404565b604082019050919050565b6000602082019050818103600083015261148f81611453565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006114f2602483610f82565b91506114fd82611496565b604082019050919050565b60006020820190508181036000830152611521816114e5565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611584602283610f82565b915061158f82611528565b604082019050919050565b600060208201905081810360008301526115b381611577565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006115f0602083610f82565b91506115fb826115ba565b602082019050919050565b6000602082019050818103600083015261161f816115e3565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611682602183610f82565b915061168d82611626565b604082019050919050565b600060208201905081810360008301526116b181611675565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611714602283610f82565b915061171f826116b8565b604082019050919050565b6000602082019050818103600083015261174381611707565b9050919050565b600061175582611095565b915061176083611095565b925082821015611773576117726112ed565b5b828203905092915050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006117b4601d83610f82565b91506117bf8261177e565b602082019050919050565b600060208201905081810360008301526117e3816117a7565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611846602583610f82565b9150611851826117ea565b604082019050919050565b6000602082019050818103600083015261187581611839565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118d8602383610f82565b91506118e38261187c565b604082019050919050565b60006020820190508181036000830152611907816118cb565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061196a602683610f82565b91506119758261190e565b604082019050919050565b600060208201905081810360008301526119998161195d565b905091905056fea2646970667358221220274fca742bfdea48fa4dcfd161cd904c62cd34f9720c5f14bef6858897908bbd64736f6c634300080a0033";

type MockATokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockATokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAToken__factory extends ContractFactory {
  constructor(...args: MockATokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    contractAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockAToken> {
    return super.deploy(
      contractAddress,
      overrides || {}
    ) as Promise<MockAToken>;
  }
  override getDeployTransaction(
    contractAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(contractAddress, overrides || {});
  }
  override attach(address: string): MockAToken {
    return super.attach(address) as MockAToken;
  }
  override connect(signer: Signer): MockAToken__factory {
    return super.connect(signer) as MockAToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockATokenInterface {
    return new utils.Interface(_abi) as MockATokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockAToken {
    return new Contract(address, _abi, signerOrProvider) as MockAToken;
  }
}
