/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PromiseFund,
  PromiseFundInterface,
} from "../../contracts/PromiseFund";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PromiseFund__CantWithdrawFunder",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__CantWithdrawOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__FundAmountMustBeAboveZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__NotFundingPeriod",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "PromiseFund__WithdrawFundsGreaterThanBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "PromiseFund__WithdrawProceedsGreaterThanBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProceedsWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getFundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getState",
    outputs: [
      {
        internalType: "enum IFund.WithdrawState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWithdrawableProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_assetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_totalFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IFund.WithdrawState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "setState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawProceedsFunder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ca338038062001ca38339818101604052810190620000379190620003d0565b620000576200004b6200014960201b60201c565b6200015160201b60201c565b32600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000cb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200021560201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006004819055506000600560006101000a81548160ff021916908360038111156200013d576200013c62000402565b5b0217905550506200054c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b62000225620002ac60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000298576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028f90620004b8565b60405180910390fd5b620002a9816200015160201b60201c565b50565b620002bc6200014960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002e26200033d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200033b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000332906200052a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000398826200036b565b9050919050565b620003aa816200038b565b8114620003b657600080fd5b50565b600081519050620003ca816200039f565b92915050565b600060208284031215620003e957620003e862000366565b5b6000620003f984828501620003b9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000620004a060268362000431565b9150620004ad8262000442565b604082019050919050565b60006020820190508181036000830152620004d38162000491565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006200051260208362000431565b91506200051f82620004da565b602082019050919050565b60006020820190508181036000830152620005458162000503565b9050919050565b611747806200055c6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063893d20e8116100ad578063ca1d209d11610071578063ca1d209d146102d6578063d9f1aed9146102f2578063dba6335f1461030e578063eb8bbd281461032c578063f2fde38b1461034a57610121565b8063893d20e81461022e5780638da5cb5b1461024c578063a6b28bea1461026a578063af62aa681461029c578063ca03d478146102b857610121565b806360d727b2116100f457806360d727b21461019c578063670ab5e9146101cc578063715018a6146101ea57806382580805146101f457806387ceff091461021057610121565b80631865c57d146101265780633e5aa85b1461014457806354b05c061461016257806356de96db14610180575b600080fd5b61012e610366565b60405161013b91906111a3565b60405180910390f35b61014c61037d565b60405161015991906111d7565b60405180910390f35b61016a6103cd565b6040516101779190611233565b60405180910390f35b61019a60048036038101906101959190611278565b6103f3565b005b6101b660048036038101906101b191906112d1565b610420565b6040516101c391906111d7565b60405180910390f35b6101d46104bf565b6040516101e19190611233565b60405180910390f35b6101f26104e9565b005b61020e60048036038101906102099190611368565b6104fd565b005b610218610581565b60405161022591906111d7565b60405180910390f35b610236610589565b6040516102439190611233565b60405180910390f35b6102546105b3565b6040516102619190611233565b60405180910390f35b610284600480360381019061027f91906112d1565b6105dc565b604051610293939291906113bb565b60405180910390f35b6102b660048036038101906102b191906113f2565b610606565b005b6102c0610942565b6040516102cd91906111d7565b60405180910390f35b6102f060048036038101906102eb91906113f2565b610948565b005b61030c600480360381019061030791906113f2565b610cd9565b005b610316610f2e565b6040516103239190611440565b60405180910390f35b610334610f54565b60405161034191906111d7565b60405180910390f35b610364600480360381019061035f91906112d1565b610f5e565b005b6000600560009054906101000a900460ff16905090565b6000600260038111156103935761039261112c565b5b600560009054906101000a900460ff1660038111156103b5576103b461112c565b5b14156103c55760045490506103ca565b600090505b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600560006101000a81548160ff021916908360038111156104185761041761112c565b5b021790555050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154146104b557600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506104ba565b600090505b919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104f1610fe2565b6104fb6000611060565b565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b815260040161053892919061145b565b6020604051808303816000875af1158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b91906114bc565b50505050565b600042905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090508060000154908060010154908060020154905083565b6003808111156106195761061861112c565b5b600560009054906101000a900460ff16600381111561063b5761063a61112c565b5b14610672576040517f01a6e85e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015481111561073d5780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546040517f11f6e9c30000000000000000000000000000000000000000000000000000000081526004016107349291906114e9565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461078f9190611541565b9250508190555080600460008282546107a89190611541565b925050819055506107dc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630836104fd565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161083b93929190611575565b6020604051808303816000875af115801561085a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087e91906114bc565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc322efa58c9cb2c39cfffdac61d35c8643f5cbf13c6a7d0034de2cf18923aff38460405161093791906111d7565b60405180910390a450565b60045481565b6000600381111561095c5761095b61112c565b5b600560009054906101000a900460ff16600381111561097e5761097d61112c565b5b146109b5576040517fce417b6700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008114156109f0576040517f35ce0e4c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a4f93929190611575565b6020604051808303816000875af1158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9291906114bc565b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610b265742600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b80600454610b3491906115ac565b60048190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610b8891906115ac565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17a760e00745bb3dd2a80fdce494e6d046d397799ef94def8cc71e2665c6c5fd84604051610cce91906111d7565b60405180910390a450565b610ce1610fe2565b60026003811115610cf557610cf461112c565b5b600560009054906101000a900460ff166003811115610d1757610d1661112c565b5b14610d4e576040517fac28408700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600454811115610d9957806004546040517f9e132333000000000000000000000000000000000000000000000000000000008152600401610d909291906114e9565b60405180910390fd5b8060046000828254610dab9190611541565b92505081905550610ddf600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630836104fd565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b8152600401610e3e93929190611575565b6020604051808303816000875af1158015610e5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8191906114bc565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3eab9245288923bdc2f009594c02746febfdd320faf123e203eeb67223aa122283604051610f2391906111d7565b60405180910390a350565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600454905090565b610f66610fe2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcd90611685565b60405180910390fd5b610fdf81611060565b50565b610fea611124565b73ffffffffffffffffffffffffffffffffffffffff166110086105b3565b73ffffffffffffffffffffffffffffffffffffffff161461105e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611055906116f1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061116c5761116b61112c565b5b50565b600081905061117d8261115b565b919050565b600061118d8261116f565b9050919050565b61119d81611182565b82525050565b60006020820190506111b86000830184611194565b92915050565b6000819050919050565b6111d1816111be565b82525050565b60006020820190506111ec60008301846111c8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061121d826111f2565b9050919050565b61122d81611212565b82525050565b60006020820190506112486000830184611224565b92915050565b600080fd5b6004811061126057600080fd5b50565b60008135905061127281611253565b92915050565b60006020828403121561128e5761128d61124e565b5b600061129c84828501611263565b91505092915050565b6112ae81611212565b81146112b957600080fd5b50565b6000813590506112cb816112a5565b92915050565b6000602082840312156112e7576112e661124e565b5b60006112f5848285016112bc565b91505092915050565b600061130982611212565b9050919050565b611319816112fe565b811461132457600080fd5b50565b60008135905061133681611310565b92915050565b611345816111be565b811461135057600080fd5b50565b6000813590506113628161133c565b92915050565b6000806000606084860312156113815761138061124e565b5b600061138f86828701611327565b93505060206113a0868287016112bc565b92505060406113b186828701611353565b9150509250925092565b60006060820190506113d060008301866111c8565b6113dd60208301856111c8565b6113ea60408301846111c8565b949350505050565b6000602082840312156114085761140761124e565b5b600061141684828501611353565b91505092915050565b600061142a826111f2565b9050919050565b61143a8161141f565b82525050565b60006020820190506114556000830184611431565b92915050565b60006040820190506114706000830185611224565b61147d60208301846111c8565b9392505050565b60008115159050919050565b61149981611484565b81146114a457600080fd5b50565b6000815190506114b681611490565b92915050565b6000602082840312156114d2576114d161124e565b5b60006114e0848285016114a7565b91505092915050565b60006040820190506114fe60008301856111c8565b61150b60208301846111c8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061154c826111be565b9150611557836111be565b92508282101561156a57611569611512565b5b828203905092915050565b600060608201905061158a6000830186611224565b6115976020830185611224565b6115a460408301846111c8565b949350505050565b60006115b7826111be565b91506115c2836111be565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115f7576115f6611512565b5b828201905092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061166f602683611602565b915061167a82611613565b604082019050919050565b6000602082019050818103600083015261169e81611662565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116db602083611602565b91506116e6826116a5565b602082019050919050565b6000602082019050818103600083015261170a816116ce565b905091905056fea26469706673582212205fad34dfad422936272f927b448cf75bb02d12480a928c151671afd49133def664736f6c634300080a0033";

type PromiseFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromiseFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PromiseFund__factory extends ContractFactory {
  constructor(...args: PromiseFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    assetAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PromiseFund> {
    return super.deploy(assetAddress, overrides || {}) as Promise<PromiseFund>;
  }
  override getDeployTransaction(
    assetAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(assetAddress, overrides || {});
  }
  override attach(address: string): PromiseFund {
    return super.attach(address) as PromiseFund;
  }
  override connect(signer: Signer): PromiseFund__factory {
    return super.connect(signer) as PromiseFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromiseFundInterface {
    return new utils.Interface(_abi) as PromiseFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PromiseFund {
    return new Contract(address, _abi, signerOrProvider) as PromiseFund;
  }
}
