/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PromiseFund,
  PromiseFundInterface,
} from "../../contracts/PromiseFund";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PromiseFund__CantWithdrawFunder",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__CantWithdrawOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__FundAmountMustBeAboveZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__NoVotesLeft",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__NotFundingPeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__StateNotPending",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__StateNotVoting",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__VoteEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__VoteStillGoing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minVoteLength",
        type: "uint256",
      },
    ],
    name: "PromiseFund__VoteTooShort",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "PromiseFund__WithdrawFundsGreaterThanBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "PromiseFund__WithdrawProceedsGreaterThanBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProceedsWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getFundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getState",
    outputs: [
      {
        internalType: "enum IFund.FundState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimeLeftVoting",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVoteEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVotesCon",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVotesPro",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWithdrawableProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_assetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timesVoted",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_totalFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_voteEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_votesCon",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_votesPro",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_votesTried",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "startVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "support",
        type: "bool",
      },
    ],
    name: "submitVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawProceedsFunder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600e600a553480156200001657600080fd5b506040516200243e3803806200243e83398181016040528101906200003c9190620003dd565b6200005c620000506200015660201b60201c565b6200015e60201b60201c565b32600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000d0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200022260201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060048190555060006006819055506000600960006101000a81548160ff021916908360048111156200014a57620001496200040f565b5b02179055505062000559565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b62000232620002b960201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620002a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200029c90620004c5565b60405180910390fd5b620002b6816200015e60201b60201c565b50565b620002c96200015660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002ef6200034a60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000348576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200033f9062000537565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003a58262000378565b9050919050565b620003b78162000398565b8114620003c357600080fd5b50565b600081519050620003d781620003ac565b92915050565b600060208284031215620003f657620003f562000373565b5b60006200040684828501620003c6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000620004ad6026836200043e565b9150620004ba826200044f565b604082019050919050565b60006020820190508181036000830152620004e0816200049e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006200051f6020836200043e565b91506200052c82620004e7565b602082019050919050565b60006020820190508181036000830152620005528162000510565b9050919050565b611ed580620005696000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063893d20e811610104578063be05decc116100a2578063dba6335f11610071578063dba6335f146104b7578063e8363e99146104d5578063eb8bbd28146104f1578063f2fde38b1461050f576101cf565b8063be05decc14610443578063ca03d47814610461578063ca1d209d1461047f578063d9f1aed91461049b576101cf565b80639d71bac0116100de5780639d71bac0146103cc578063a6b28bea146103ea578063af62aa681461041d578063b922394614610439576101cf565b8063893d20e8146103725780638da5cb5b1461039057806399b6e524146103ae576101cf565b806360d727b21161017157806373d164071161014b57806373d16407146102fc578063825808051461031a57806386b85f7d1461033657806387ceff0914610354576101cf565b806360d727b2146102a4578063670ab5e9146102d4578063715018a6146102f2576101cf565b80633e5aa85b116101ad5780633e5aa85b1461022e5780633f2205241461024c57806347145d1d1461026857806354b05c0614610286576101cf565b80631865c57d146101d45780631c7d8098146101f257806332a8842714610210575b600080fd5b6101dc61052b565b6040516101e991906118d9565b60405180910390f35b6101fa610542565b604051610207919061190d565b60405180910390f35b61021861054c565b604051610225919061190d565b60405180910390f35b610236610552565b604051610243919061190d565b60405180910390f35b61026660048036038101906102619190611959565b6105a2565b005b610270610709565b60405161027d919061190d565b60405180910390f35b61028e610764565b60405161029b91906119c7565b60405180910390f35b6102be60048036038101906102b99190611a0e565b61078a565b6040516102cb919061190d565b60405180910390f35b6102dc610829565b6040516102e991906119c7565b60405180910390f35b6102fa610853565b005b610304610867565b604051610311919061190d565b60405180910390f35b610334600480360381019061032f9190611a79565b61086d565b005b61033e6108f1565b60405161034b919061190d565b60405180910390f35b61035c610941565b604051610369919061190d565b60405180910390f35b61037a610949565b60405161038791906119c7565b60405180910390f35b610398610973565b6040516103a591906119c7565b60405180910390f35b6103b661099c565b6040516103c3919061190d565b60405180910390f35b6103d46109a6565b6040516103e1919061190d565b60405180910390f35b61040460048036038101906103ff9190611a0e565b6109ac565b6040516104149493929190611acc565b60405180910390f35b61043760048036038101906104329190611959565b6109dc565b005b610441610d19565b005b61044b610e14565b604051610458919061190d565b60405180910390f35b610469610e1a565b604051610476919061190d565b60405180910390f35b61049960048036038101906104949190611959565b610e20565b005b6104b560048036038101906104b09190611959565b6111f9565b005b6104bf61144e565b6040516104cc9190611b32565b60405180910390f35b6104ef60048036038101906104ea9190611b85565b611474565b005b6104f961168a565b604051610506919061190d565b60405180910390f35b61052960048036038101906105249190611a0e565b611694565b005b6000600960009054906101000a900460ff16905090565b6000600854905090565b60075481565b60006002600481111561056857610567611862565b5b600960009054906101000a900460ff16600481111561058a57610589611862565b5b141561059a57600454905061059f565b600090505b90565b6105aa611718565b600a548110156105f357600a546040517fab0631210000000000000000000000000000000000000000000000000000000081526004016105ea919061190d565b60405180910390fd5b6000600481111561060757610606611862565b5b600960009054906101000a900460ff16600481111561062957610628611862565b5b1415801561066a575060048081111561064557610644611862565b5b600960009054906101000a900460ff16600481111561066757610666611862565b5b14155b156106a1576040517f7115fe7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600660008282546106b49190611be1565b9250508190555062015180816106ca9190611c37565b426106d59190611be1565b6005819055506001600960006101000a81548160ff0219169083600481111561070157610700611862565b5b021790555050565b60006001600481111561071f5761071e611862565b5b600960009054906101000a900460ff16600481111561074157610740611862565b5b141561075c57426005546107559190611c91565b9050610761565b600090505b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461081f57600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050610824565b600090505b919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61085b611718565b6108656000611796565b565b60055481565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b81526004016108a8929190611cc5565b6020604051808303816000875af11580156108c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108eb9190611d03565b50505050565b60006001600481111561090757610906611862565b5b600960009054906101000a900460ff16600481111561092957610928611862565b5b141561093957600554905061093e565b600090505b90565b600042905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600754905090565b60065481565b60036020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b600360048111156109f0576109ef611862565b5b600960009054906101000a900460ff166004811115610a1257610a11611862565b5b14610a49576040517f01a6e85e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154811115610b145780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546040517f11f6e9c3000000000000000000000000000000000000000000000000000000008152600401610b0b929190611d30565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610b669190611c91565b925050819055508060046000828254610b7f9190611c91565b92505081905550610bb3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16308361086d565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b8152600401610c1293929190611d59565b6020604051808303816000875af1158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c559190611d03565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc322efa58c9cb2c39cfffdac61d35c8643f5cbf13c6a7d0034de2cf18923aff384604051610d0e919061190d565b60405180910390a450565b60016004811115610d2d57610d2c611862565b5b600960009054906101000a900460ff166004811115610d4f57610d4e611862565b5b14610d86576040517fe9c5a93800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600554421015610dc2576040517f425a630800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075460085411610dd4576002610de9565b600260065410610de5576003610de8565b60045b5b600960006101000a81548160ff02191690836004811115610e0d57610e0c611862565b5b0217905550565b60085481565b60045481565b60006004811115610e3457610e33611862565b5b600960009054906101000a900460ff166004811115610e5657610e55611862565b5b14610e8d576040517fce417b6700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000811415610ec8576040517f35ce0e4c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610f2793929190611d59565b6020604051808303816000875af1158015610f46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6a9190611d03565b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414156110465742600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505b806004546110549190611be1565b60048190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546110a89190611be1565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17a760e00745bb3dd2a80fdce494e6d046d397799ef94def8cc71e2665c6c5fd846040516111ee919061190d565b60405180910390a450565b611201611718565b6002600481111561121557611214611862565b5b600960009054906101000a900460ff16600481111561123757611236611862565b5b1461126e576040517fac28408700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004548111156112b957806004546040517f9e1323330000000000000000000000000000000000000000000000000000000081526004016112b0929190611d30565b60405180910390fd5b80600460008282546112cb9190611c91565b925050819055506112ff600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16308361086d565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161135e93929190611d59565b6020604051808303816000875af115801561137d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a19190611d03565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3eab9245288923bdc2f009594c02746febfdd320faf123e203eeb67223aa122283604051611443919061190d565b60405180910390a350565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600481111561148857611487611862565b5b600960009054906101000a900460ff1660048111156114aa576114a9611862565b5b146114e1576040517fe9c5a93800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b426005541015611525576114f3610d19565b6040517f6c03d5dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154600654600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546115b89190611c37565b116115ef576040517f931faea200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546116429190611be1565b925050819055508061166c576001600860008282546116619190611be1565b925050819055611686565b60016007600082825461167f9190611be1565b9250508190555b5050565b6000600454905090565b61169c611718565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561170c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170390611e13565b60405180910390fd5b61171581611796565b50565b61172061185a565b73ffffffffffffffffffffffffffffffffffffffff1661173e610973565b73ffffffffffffffffffffffffffffffffffffffff1614611794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178b90611e7f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600581106118a2576118a1611862565b5b50565b60008190506118b382611891565b919050565b60006118c3826118a5565b9050919050565b6118d3816118b8565b82525050565b60006020820190506118ee60008301846118ca565b92915050565b6000819050919050565b611907816118f4565b82525050565b600060208201905061192260008301846118fe565b92915050565b600080fd5b611936816118f4565b811461194157600080fd5b50565b6000813590506119538161192d565b92915050565b60006020828403121561196f5761196e611928565b5b600061197d84828501611944565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119b182611986565b9050919050565b6119c1816119a6565b82525050565b60006020820190506119dc60008301846119b8565b92915050565b6119eb816119a6565b81146119f657600080fd5b50565b600081359050611a08816119e2565b92915050565b600060208284031215611a2457611a23611928565b5b6000611a32848285016119f9565b91505092915050565b6000611a46826119a6565b9050919050565b611a5681611a3b565b8114611a6157600080fd5b50565b600081359050611a7381611a4d565b92915050565b600080600060608486031215611a9257611a91611928565b5b6000611aa086828701611a64565b9350506020611ab1868287016119f9565b9250506040611ac286828701611944565b9150509250925092565b6000608082019050611ae160008301876118fe565b611aee60208301866118fe565b611afb60408301856118fe565b611b0860608301846118fe565b95945050505050565b6000611b1c82611986565b9050919050565b611b2c81611b11565b82525050565b6000602082019050611b476000830184611b23565b92915050565b60008115159050919050565b611b6281611b4d565b8114611b6d57600080fd5b50565b600081359050611b7f81611b59565b92915050565b600060208284031215611b9b57611b9a611928565b5b6000611ba984828501611b70565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bec826118f4565b9150611bf7836118f4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c2c57611c2b611bb2565b5b828201905092915050565b6000611c42826118f4565b9150611c4d836118f4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c8657611c85611bb2565b5b828202905092915050565b6000611c9c826118f4565b9150611ca7836118f4565b925082821015611cba57611cb9611bb2565b5b828203905092915050565b6000604082019050611cda60008301856119b8565b611ce760208301846118fe565b9392505050565b600081519050611cfd81611b59565b92915050565b600060208284031215611d1957611d18611928565b5b6000611d2784828501611cee565b91505092915050565b6000604082019050611d4560008301856118fe565b611d5260208301846118fe565b9392505050565b6000606082019050611d6e60008301866119b8565b611d7b60208301856119b8565b611d8860408301846118fe565b949350505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611dfd602683611d90565b9150611e0882611da1565b604082019050919050565b60006020820190508181036000830152611e2c81611df0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611e69602083611d90565b9150611e7482611e33565b602082019050919050565b60006020820190508181036000830152611e9881611e5c565b905091905056fea2646970667358221220ba027441fd1a9d2339dcca4baabd324f5e2f067a9c6674be593f9dcd5f0559be64736f6c634300080a0033";

type PromiseFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromiseFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PromiseFund__factory extends ContractFactory {
  constructor(...args: PromiseFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    assetAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PromiseFund> {
    return super.deploy(assetAddress, overrides || {}) as Promise<PromiseFund>;
  }
  override getDeployTransaction(
    assetAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(assetAddress, overrides || {});
  }
  override attach(address: string): PromiseFund {
    return super.attach(address) as PromiseFund;
  }
  override connect(signer: Signer): PromiseFund__factory {
    return super.connect(signer) as PromiseFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromiseFundInterface {
    return new utils.Interface(_abi) as PromiseFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PromiseFund {
    return new Contract(address, _abi, signerOrProvider) as PromiseFund;
  }
}
