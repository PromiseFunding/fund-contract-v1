/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PromiseFund,
  PromiseFundInterface,
} from "../../contracts/PromiseFund";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PromiseFund__CantWithdrawFunder",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__CantWithdrawOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PromiseFund__FundAmountMustBeAboveZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "PromiseFund__WithdrawFundsGreaterThanBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "PromiseFund__WithdrawProceedsGreaterThanBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProceedsWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getFundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getState",
    outputs: [
      {
        internalType: "enum IFund.WithdrawState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWithdrawableProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_assetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_totalFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IFund.WithdrawState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "setState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawProceedsFunder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c3638038062001c368339818101604052810190620000379190620003d0565b620000576200004b6200014960201b60201c565b6200015160201b60201c565b32600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000cb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200021560201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006004819055506000600560006101000a81548160ff021916908360038111156200013d576200013c62000402565b5b0217905550506200054c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b62000225620002ac60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000298576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028f90620004b8565b60405180910390fd5b620002a9816200015160201b60201c565b50565b620002bc6200014960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002e26200033d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200033b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000332906200052a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000398826200036b565b9050919050565b620003aa816200038b565b8114620003b657600080fd5b50565b600081519050620003ca816200039f565b92915050565b600060208284031215620003e957620003e862000366565b5b6000620003f984828501620003b9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000620004a060268362000431565b9150620004ad8262000442565b604082019050919050565b60006020820190508181036000830152620004d38162000491565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006200051260208362000431565b91506200051f82620004da565b602082019050919050565b60006020820190508181036000830152620005458162000503565b9050919050565b6116da806200055c6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063893d20e8116100ad578063ca1d209d11610071578063ca1d209d146102d6578063d9f1aed9146102f2578063dba6335f1461030e578063eb8bbd281461032c578063f2fde38b1461034a57610121565b8063893d20e81461022e5780638da5cb5b1461024c578063a6b28bea1461026a578063af62aa681461029c578063ca03d478146102b857610121565b806360d727b2116100f457806360d727b21461019c578063670ab5e9146101cc578063715018a6146101ea57806382580805146101f457806387ceff091461021057610121565b80631865c57d146101265780633e5aa85b1461014457806354b05c061461016257806356de96db14610180575b600080fd5b61012e610366565b60405161013b9190611136565b60405180910390f35b61014c61037d565b604051610159919061116a565b60405180910390f35b61016a6103cd565b60405161017791906111c6565b60405180910390f35b61019a6004803603810190610195919061120b565b6103f3565b005b6101b660048036038101906101b19190611264565b610420565b6040516101c3919061116a565b60405180910390f35b6101d46104bf565b6040516101e191906111c6565b60405180910390f35b6101f26104e9565b005b61020e600480360381019061020991906112fb565b6104fd565b005b610218610581565b604051610225919061116a565b60405180910390f35b610236610589565b60405161024391906111c6565b60405180910390f35b6102546105b3565b60405161026191906111c6565b60405180910390f35b610284600480360381019061027f9190611264565b6105dc565b6040516102939392919061134e565b60405180910390f35b6102b660048036038101906102b19190611385565b610606565b005b6102c0610942565b6040516102cd919061116a565b60405180910390f35b6102f060048036038101906102eb9190611385565b610948565b005b61030c60048036038101906103079190611385565b610c6c565b005b610316610ec1565b60405161032391906113d3565b60405180910390f35b610334610ee7565b604051610341919061116a565b60405180910390f35b610364600480360381019061035f9190611264565b610ef1565b005b6000600560009054906101000a900460ff16905090565b600060026003811115610393576103926110bf565b5b600560009054906101000a900460ff1660038111156103b5576103b46110bf565b5b14156103c55760045490506103ca565b600090505b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600560006101000a81548160ff02191690836003811115610418576104176110bf565b5b021790555050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154146104b557600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506104ba565b600090505b919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104f1610f75565b6104fb6000610ff3565b565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b81526004016105389291906113ee565b6020604051808303816000875af1158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b919061144f565b50505050565b600042905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090508060000154908060010154908060020154905083565b600380811115610619576106186110bf565b5b600560009054906101000a900460ff16600381111561063b5761063a6110bf565b5b14610672576040517f01a6e85e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015481111561073d5780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546040517f11f6e9c300000000000000000000000000000000000000000000000000000000815260040161073492919061147c565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461078f91906114d4565b9250508190555080600460008282546107a891906114d4565b925050819055506107dc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630836104fd565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161083b93929190611508565b6020604051808303816000875af115801561085a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087e919061144f565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc322efa58c9cb2c39cfffdac61d35c8643f5cbf13c6a7d0034de2cf18923aff384604051610937919061116a565b60405180910390a450565b60045481565b6000811415610983576040517f35ce0e4c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109e293929190611508565b6020604051808303816000875af1158015610a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a25919061144f565b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610ab95742600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b80600454610ac7919061153f565b60048190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610b1b919061153f565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17a760e00745bb3dd2a80fdce494e6d046d397799ef94def8cc71e2665c6c5fd84604051610c61919061116a565b60405180910390a450565b610c74610f75565b60026003811115610c8857610c876110bf565b5b600560009054906101000a900460ff166003811115610caa57610ca96110bf565b5b14610ce1576040517fac28408700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600454811115610d2c57806004546040517f9e132333000000000000000000000000000000000000000000000000000000008152600401610d2392919061147c565b60405180910390fd5b8060046000828254610d3e91906114d4565b92505081905550610d72600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630836104fd565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b8152600401610dd193929190611508565b6020604051808303816000875af1158015610df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e14919061144f565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3eab9245288923bdc2f009594c02746febfdd320faf123e203eeb67223aa122283604051610eb6919061116a565b60405180910390a350565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600454905090565b610ef9610f75565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6090611618565b60405180910390fd5b610f7281610ff3565b50565b610f7d6110b7565b73ffffffffffffffffffffffffffffffffffffffff16610f9b6105b3565b73ffffffffffffffffffffffffffffffffffffffff1614610ff1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe890611684565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106110ff576110fe6110bf565b5b50565b6000819050611110826110ee565b919050565b600061112082611102565b9050919050565b61113081611115565b82525050565b600060208201905061114b6000830184611127565b92915050565b6000819050919050565b61116481611151565b82525050565b600060208201905061117f600083018461115b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111b082611185565b9050919050565b6111c0816111a5565b82525050565b60006020820190506111db60008301846111b7565b92915050565b600080fd5b600481106111f357600080fd5b50565b600081359050611205816111e6565b92915050565b600060208284031215611221576112206111e1565b5b600061122f848285016111f6565b91505092915050565b611241816111a5565b811461124c57600080fd5b50565b60008135905061125e81611238565b92915050565b60006020828403121561127a576112796111e1565b5b60006112888482850161124f565b91505092915050565b600061129c826111a5565b9050919050565b6112ac81611291565b81146112b757600080fd5b50565b6000813590506112c9816112a3565b92915050565b6112d881611151565b81146112e357600080fd5b50565b6000813590506112f5816112cf565b92915050565b600080600060608486031215611314576113136111e1565b5b6000611322868287016112ba565b93505060206113338682870161124f565b9250506040611344868287016112e6565b9150509250925092565b6000606082019050611363600083018661115b565b611370602083018561115b565b61137d604083018461115b565b949350505050565b60006020828403121561139b5761139a6111e1565b5b60006113a9848285016112e6565b91505092915050565b60006113bd82611185565b9050919050565b6113cd816113b2565b82525050565b60006020820190506113e860008301846113c4565b92915050565b600060408201905061140360008301856111b7565b611410602083018461115b565b9392505050565b60008115159050919050565b61142c81611417565b811461143757600080fd5b50565b60008151905061144981611423565b92915050565b600060208284031215611465576114646111e1565b5b60006114738482850161143a565b91505092915050565b6000604082019050611491600083018561115b565b61149e602083018461115b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114df82611151565b91506114ea83611151565b9250828210156114fd576114fc6114a5565b5b828203905092915050565b600060608201905061151d60008301866111b7565b61152a60208301856111b7565b611537604083018461115b565b949350505050565b600061154a82611151565b915061155583611151565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561158a576115896114a5565b5b828201905092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611602602683611595565b915061160d826115a6565b604082019050919050565b60006020820190508181036000830152611631816115f5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061166e602083611595565b915061167982611638565b602082019050919050565b6000602082019050818103600083015261169d81611661565b905091905056fea2646970667358221220ea83838f4b5ee26867fd943b3c85384293eee5374eec2dd5c1339405c6cbd7ab64736f6c634300080a0033";

type PromiseFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromiseFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PromiseFund__factory extends ContractFactory {
  constructor(...args: PromiseFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    assetAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PromiseFund> {
    return super.deploy(assetAddress, overrides || {}) as Promise<PromiseFund>;
  }
  override getDeployTransaction(
    assetAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(assetAddress, overrides || {});
  }
  override attach(address: string): PromiseFund {
    return super.attach(address) as PromiseFund;
  }
  override connect(signer: Signer): PromiseFund__factory {
    return super.connect(signer) as PromiseFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromiseFundInterface {
    return new utils.Interface(_abi) as PromiseFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PromiseFund {
    return new Contract(address, _abi, signerOrProvider) as PromiseFund;
  }
}
