/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GovernanceToken,
  GovernanceTokenInterface,
} from "../../../contracts/governance/GovernanceToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023d6380380620023d6833981810160405281019062000037919062000576565b818181600390805190602001906200005192919062000329565b5080600490805190602001906200006a92919062000329565b5050506200008d620000816200010960201b60201c565b6200011160201b60201c565b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000101600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620001d760201b60201c565b50506200077b565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001e76200026e60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200025a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002519062000682565b60405180910390fd5b6200026b816200011160201b60201c565b50565b6200027e6200010960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002a4620002ff60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620002fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002f490620006f4565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b828054620003379062000745565b90600052602060002090601f0160209004810192826200035b5760008555620003a7565b82601f106200037657805160ff1916838001178555620003a7565b82800160010185558215620003a7579182015b82811115620003a657825182559160200191906001019062000389565b5b509050620003b69190620003ba565b5090565b5b80821115620003d5576000816000905550600101620003bb565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200044282620003f7565b810181811067ffffffffffffffff8211171562000464576200046362000408565b5b80604052505050565b600062000479620003d9565b905062000487828262000437565b919050565b600067ffffffffffffffff821115620004aa57620004a962000408565b5b620004b582620003f7565b9050602081019050919050565b60005b83811015620004e2578082015181840152602081019050620004c5565b83811115620004f2576000848401525b50505050565b60006200050f62000509846200048c565b6200046d565b9050828152602081018484840111156200052e576200052d620003f2565b5b6200053b848285620004c2565b509392505050565b600082601f8301126200055b576200055a620003ed565b5b81516200056d848260208601620004f8565b91505092915050565b6000806040838503121562000590576200058f620003e3565b5b600083015167ffffffffffffffff811115620005b157620005b0620003e8565b5b620005bf8582860162000543565b925050602083015167ffffffffffffffff811115620005e357620005e2620003e8565b5b620005f18582860162000543565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006200066a602683620005fb565b915062000677826200060c565b604082019050919050565b600060208201905081810360008301526200069d816200065b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620006dc602083620005fb565b9150620006e982620006a4565b602082019050919050565b600060208201905081810360008301526200070f81620006cd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200075e57607f821691505b6020821081141562000775576200077462000716565b5b50919050565b611c4b806200078b6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d7146102a8578063a9059cbb146102d8578063dba6335f14610308578063dd62ed3e14610326578063f2fde38b146103565761010b565b8063715018a6146102465780638da5cb5b1461025057806394bf804d1461026e57806395d89b411461028a5761010b565b8063313ce567116100de578063313ce567146101ac57806339509351146101ca57806342966c68146101fa57806370a08231146102165761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b610118610372565b60405161012591906111ac565b60405180910390f35b61014860048036038101906101439190611267565b610404565b60405161015591906112c2565b60405180910390f35b610166610427565b60405161017391906112ec565b60405180910390f35b61019660048036038101906101919190611307565b610431565b6040516101a391906112c2565b60405180910390f35b6101b4610460565b6040516101c19190611376565b60405180910390f35b6101e460048036038101906101df9190611267565b610469565b6040516101f191906112c2565b60405180910390f35b610214600480360381019061020f9190611391565b6104a0565b005b610230600480360381019061022b91906113be565b6104b5565b60405161023d91906112ec565b60405180910390f35b61024e6104fd565b005b610258610511565b60405161026591906113fa565b60405180910390f35b61028860048036038101906102839190611415565b61053b565b005b610292610551565b60405161029f91906111ac565b60405180910390f35b6102c260048036038101906102bd9190611267565b6105e3565b6040516102cf91906112c2565b60405180910390f35b6102f260048036038101906102ed9190611267565b61065a565b6040516102ff91906112c2565b60405180910390f35b61031061067d565b60405161031d91906113fa565b60405180910390f35b610340600480360381019061033b9190611455565b6106a3565b60405161034d91906112ec565b60405180910390f35b610370600480360381019061036b91906113be565b61072a565b005b606060038054610381906114c4565b80601f01602080910402602001604051908101604052809291908181526020018280546103ad906114c4565b80156103fa5780601f106103cf576101008083540402835291602001916103fa565b820191906000526020600020905b8154815290600101906020018083116103dd57829003601f168201915b5050505050905090565b60008061040f6107ae565b905061041c8185856107b6565b600191505092915050565b6000600254905090565b60008061043c6107ae565b9050610449858285610981565b610454858585610a0d565b60019150509392505050565b60006012905090565b6000806104746107ae565b905061049581858561048685896106a3565b6104909190611525565b6107b6565b600191505092915050565b6104a8610c8e565b6104b23382610d0c565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610505610c8e565b61050f6000610ee3565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610543610c8e565b61054d8183610fa9565b5050565b606060048054610560906114c4565b80601f016020809104026020016040519081016040528092919081815260200182805461058c906114c4565b80156105d95780601f106105ae576101008083540402835291602001916105d9565b820191906000526020600020905b8154815290600101906020018083116105bc57829003601f168201915b5050505050905090565b6000806105ee6107ae565b905060006105fc82866106a3565b905083811015610641576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610638906115ed565b60405180910390fd5b61064e82868684036107b6565b60019250505092915050565b6000806106656107ae565b9050610672818585610a0d565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610732610c8e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107999061167f565b60405180910390fd5b6107ab81610ee3565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d90611711565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088d906117a3565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161097491906112ec565b60405180910390a3505050565b600061098d84846106a3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a0757818110156109f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f09061180f565b60405180910390fd5b610a0684848484036107b6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a74906118a1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae490611933565b60405180910390fd5b610af8838383611109565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b75906119c5565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c119190611525565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c7591906112ec565b60405180910390a3610c8884848461110e565b50505050565b610c966107ae565b73ffffffffffffffffffffffffffffffffffffffff16610cb4610511565b73ffffffffffffffffffffffffffffffffffffffff1614610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0190611a31565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7390611ac3565b60405180910390fd5b610d8882600083611109565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0590611b55565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610e659190611b75565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eca91906112ec565b60405180910390a3610ede8360008461110e565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611019576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101090611bf5565b60405180910390fd5b61102560008383611109565b80600260008282546110379190611525565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461108c9190611525565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110f191906112ec565b60405180910390a36111056000838361110e565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561114d578082015181840152602081019050611132565b8381111561115c576000848401525b50505050565b6000601f19601f8301169050919050565b600061117e82611113565b611188818561111e565b935061119881856020860161112f565b6111a181611162565b840191505092915050565b600060208201905081810360008301526111c68184611173565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111fe826111d3565b9050919050565b61120e816111f3565b811461121957600080fd5b50565b60008135905061122b81611205565b92915050565b6000819050919050565b61124481611231565b811461124f57600080fd5b50565b6000813590506112618161123b565b92915050565b6000806040838503121561127e5761127d6111ce565b5b600061128c8582860161121c565b925050602061129d85828601611252565b9150509250929050565b60008115159050919050565b6112bc816112a7565b82525050565b60006020820190506112d760008301846112b3565b92915050565b6112e681611231565b82525050565b600060208201905061130160008301846112dd565b92915050565b6000806000606084860312156113205761131f6111ce565b5b600061132e8682870161121c565b935050602061133f8682870161121c565b925050604061135086828701611252565b9150509250925092565b600060ff82169050919050565b6113708161135a565b82525050565b600060208201905061138b6000830184611367565b92915050565b6000602082840312156113a7576113a66111ce565b5b60006113b584828501611252565b91505092915050565b6000602082840312156113d4576113d36111ce565b5b60006113e28482850161121c565b91505092915050565b6113f4816111f3565b82525050565b600060208201905061140f60008301846113eb565b92915050565b6000806040838503121561142c5761142b6111ce565b5b600061143a85828601611252565b925050602061144b8582860161121c565b9150509250929050565b6000806040838503121561146c5761146b6111ce565b5b600061147a8582860161121c565b925050602061148b8582860161121c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114dc57607f821691505b602082108114156114f0576114ef611495565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061153082611231565b915061153b83611231565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115705761156f6114f6565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006115d760258361111e565b91506115e28261157b565b604082019050919050565b60006020820190508181036000830152611606816115ca565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061166960268361111e565b91506116748261160d565b604082019050919050565b600060208201905081810360008301526116988161165c565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006116fb60248361111e565b91506117068261169f565b604082019050919050565b6000602082019050818103600083015261172a816116ee565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061178d60228361111e565b915061179882611731565b604082019050919050565b600060208201905081810360008301526117bc81611780565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006117f9601d8361111e565b9150611804826117c3565b602082019050919050565b60006020820190508181036000830152611828816117ec565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061188b60258361111e565b91506118968261182f565b604082019050919050565b600060208201905081810360008301526118ba8161187e565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061191d60238361111e565b9150611928826118c1565b604082019050919050565b6000602082019050818103600083015261194c81611910565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006119af60268361111e565b91506119ba82611953565b604082019050919050565b600060208201905081810360008301526119de816119a2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a1b60208361111e565b9150611a26826119e5565b602082019050919050565b60006020820190508181036000830152611a4a81611a0e565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611aad60218361111e565b9150611ab882611a51565b604082019050919050565b60006020820190508181036000830152611adc81611aa0565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b3f60228361111e565b9150611b4a82611ae3565b604082019050919050565b60006020820190508181036000830152611b6e81611b32565b9050919050565b6000611b8082611231565b9150611b8b83611231565b925082821015611b9e57611b9d6114f6565b5b828203905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611bdf601f8361111e565b9150611bea82611ba9565b602082019050919050565b60006020820190508181036000830152611c0e81611bd2565b905091905056fea2646970667358221220ce4e30a5ce8623ad2f388d6c91aba2b426bf46f597f0c542d479a00d4b134baf64736f6c634300080a0033";

type GovernanceTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceToken__factory extends ContractFactory {
  constructor(...args: GovernanceTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenName: PromiseOrValue<string>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GovernanceToken> {
    return super.deploy(
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<GovernanceToken>;
  }
  override getDeployTransaction(
    tokenName: PromiseOrValue<string>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenName, tokenSymbol, overrides || {});
  }
  override attach(address: string): GovernanceToken {
    return super.attach(address) as GovernanceToken;
  }
  override connect(signer: Signer): GovernanceToken__factory {
    return super.connect(signer) as GovernanceToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceTokenInterface {
    return new utils.Interface(_abi) as GovernanceTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceToken {
    return new Contract(address, _abi, signerOrProvider) as GovernanceToken;
  }
}
